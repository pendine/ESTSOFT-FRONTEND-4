	
[문항3] 다음 보기들을 읽고 답변하세요. (문제당 2점)

(배점:10)
1. HTTP(Hypertext Transfer Protocol)는 무엇이며, 웹에서 어떤 역할을 하는지 서술하세요.

 문서간 연결을 해주는 개념이며 다른 문서(웹페이지)로 이동할 수 있도록 함

2. URI, URL의 개념과 차이점을 서술하세요.

 URI = 
   URI(Uniform Resource Identifier) : 
    URN + URL
    자원에 위치, 고유식별자로써 URL을 포함하고있는 개념
    언제나 붙어있음.(인터넷에서 요구되는 기본조건)

 URL = 
  URL(Uniform Resource Locator) : 리소스의 정확한 위치 정보
        URL을 통해 리소스로 정확하게 접근할 수 있음
        (파일이나 웹상에 있는 정보)
        ex) www.naver.com
      URL 구조 :
      스키마//호스트(도메인):포트번호/경로?쿼리스트링
      https://www.naver.com:443/index?id=1&page=4
      스키마 : 통신방식 결정
        http, https, ftp, sftp, file, RTSP 
      도메인 : IP를 사람이 기억하기 편한 단어로 도메인화
      포트 : 각 프로토콜의 데이터가 통하는 논리적 통로
      경로 : 웹서버의 루트 디렉토리부터의 위치
      쿼리 스트링 : 리소스의 형식범위를 좁히기 위한 질의(k=v)
      
3. HTTP에서 사용되는 주요 메서드(GET, POST, PUT, DELETE)의 개념을 각각 서술하세요.
  GET = 
     - 조회 목적
   - 보안성 낮음, 길이제한(255), 데이터를 URL에 노출
  POST = 
     - HTTP 패킷 body사용(요청시 body에 실어보냄)
   - 대용량 데이터 전송 가능. 대신느림(GET대비)
  PUT = 
  리소스 전체를 대체할때 사용하는 메서드(전송방식)
   - 리소스가 없으면(받아온게 없으면) 새로생성. 있으면 기존것 대체
  DELETE =  특정 리소스 삭제
   - 요청된 리소스 제거시 사용


4. HTTP 상태 코드(Status Code)는 무엇이며, 아래 상태 코드의 의미를 각각 서술하세요.
200 = 사용자의 요청을 성공적으로 처리
301 = 지정한 리소스가 새로운 URI로 이동했다라는 의미
404 = 사용자의 요청에 지정한 리소스를 찾을 수 없음
500 = 서버 에러 발생

5. 쿠키와 세션의 차이점을 서술하세요.
  쿠키 : 사용자가 웹사이트를 방문했을때 그 사이트가 사용중인 서버에서
        사용자의 컴퓨터에 저장하는 작은 기록 정보 파일
        크기는 4kb로 제한
  세션 : 일정시간동안 같은 사용자로부터 들어오는 Req를 하나의 상태로 보고
        그상태를 유지시키는 기술(쿠키를 서비스 하는 서버에 저장)
        세션정보는 서버메모리나 DB에 저장

=============================================================================

[문항4] 보기를 참고하여 다음 시나리오에서 적합한 자료구조를 선택하고 이유를 설명하시오.

(1번문제 3점, 2번문제 3점, 3번문제 4점)
이유를 정확하게 설명해주세요.
(해당 알고리즘을 선택한 이유가 개념과 맞아야 완벽한 정답으로 인정됩니다. / 부분점수 있음) (배점:10)
(1) 웹 브라우저에서 뒤로 가기/앞으로 가기 기능을 구현하려고 합니다.

(2) 은행에서 고객이 대기열에 따라 순서대로 처리되도록 시스템을 설계하려고 합니다.

(3) 도시 간 최단 경로를 계산하려고 합니다.

1. 스택구조
  FILO 구조로써 사용자가 가장 처음 방문한 순서를 가장 나중에 호출할수있고, 
  가장 나중에 방문한 순서를 제일 먼저 호출 할 수 있기 때문에
  앞,뒤로가기 순서를 호출하는 구조에 알맞음

2. 큐 구조
  FIFO 구조로써 먼저 온 사용자의 순서에 따라 요청을 처리하는 구조에 알맞기 때문에.

3. BFS 너비우선탐색
  임의의 노드에서 탐색을 시작하여 현재 노드에서 접근가능한 노드를 먼저 탐색하는 구조로써,
  가장 빠른 경로를 탐색하는데에 있어 적합한 탐색방법이기 때문에.
