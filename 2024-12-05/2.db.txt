데이터베이스(DB)
  - 통합하여 관리되는 데이터의 집합체.
DB의 목적
  - 데이터의 저장, 조회, 연결 등 각종 데이터를 처리

CRUD(CREATE, READ, UPDATE, DELETE)

DB의 특징
 - 미들웨어라는것에 의해 관리
 - 질의(쿼리)에 대한 즉각적 처리와 응답이 이루어짐
 - 최신의 데이터를 항상 유지
 - 원하는 데이터를 동시에 공유
 - 원하는 데이터를 내용에 따라 참조
 - 데이터베이스는 응용프로그램과 독립적

미들웨어 : 운영체제와 프로그램(소프트웨어) 사이에서 
                  다양한 기능을 제공하는 프로그램
DBMS(DataBase Management System)
 - 데이터베이스를 제어(관리)하는 미들웨어
    (oracle, mysql, mariaDB, ms-sql, postgreSQL, cybase, tibero)

DB의 종류
 - RDB(Relational DataBase) / 관계형 데이터베이스
 - no-sql

SQL(Structured Query Language)
 - DB에서 데이터를 정의, 조작, 제어하기위해 사용하는 언어.
 
1. DDL : Data Definition Language(데이터 정의어)
    - 데이터베이스나 테이블등을 생성, 삭제하거나
      그 구조를 변경하기 위한 명령어
      (create, alter, drop)
2. DML : Data Manipulation Language(데이터 조작어)
    - 데이터베이스에 저장된 데이터를 처리하거나
      조회, 검색하기위한 명령어
      (insert, update, delete, select)
3. DCL : Data Control Language(데이터 제어어)
     - 데이터베이스에 저장된 데이터를 관리하기위해 
       혹은 데이터의 무결성을 제어하기위한 명령어
       (GRANT, REVOKE)

무결성 : 정보에 결점이 없도록 유지하는 성질
  - 데이터베이스 내에  저장되는 데이터 값들이 항상 일관성을 가지고 있어야 하며
    데이터의 유효성, 정확성, 안정성을 유지할수 있도록 하는 
    데이터 베이스의 특성
  - 무결성을 유지하기위해 데이터베이스는 제약조건이라는것을 둔다.


테이블(릴레이션) : 데이터를 저장하는 영역
 - 테이블은 HTML처럼 행과 열로 구성.
 - 데이터베이스에서는 행과 열을 부르는 다른 용어들이 존재.
    행 : 튜플, 레코드
    열 : 어트리뷰트, 필드 
 - 테이블은 데이터의 무결성을 방어하고자 제약조건이라는것을 
   먼저 부여하여 무결성을 지킬수 있음.

 - 제약조건
   데이터의 무결성을 지키기위해, 데이터를 입력받을때 실행되는 검사규칙
 
null : 데이터가 없다는것을 강하게 표현하는 개념
 - 0과는 완전히 다름.(컴퓨터입장에서)
 - 컴퓨터의 입장에서는 0은 0이라는 값이 존재한다.
 - null은 말그대로 아무것도 없다 라는 느낌
 
key - 데이터베이스에서 조건에 만족하는 행(튜플, 레코드)를 찾거나
         순서대로 정렬할때 다른 튜플들과 구별할수 있는 유일한 기준이되는
         열(어트리뷰트, 필드)

candidate key(후보키)
 - 테이블을 구성하는 속성들 중에서 행을 유일하게 구별할수 있는 열들의
   부분집합
 - 모든 테이블은 반드시 하나이상의 후보키를 가져야한다.
   (DBMS가 강요하는 사항은 아니지만 무결성을 보호하기 위해서는 항시 고려)
     - 복합키성 테이블이 존재할수는 있음)
 - 행에 대해 유일성과 최소성을 만족시켜야한다(not null + unique)

primary key(기본키)
 - 


1. NOT NULL : 해당 열은 NULL값을 저장할수 없음
2. UNIQUE : 해당 필드는 서로 다른 값을 가져야한다. (null값도 1개는 저장가능)
3. PRIMARY KEY : 해당 필드(열)가 not null + unique 규칙이 모두 적용됨.
4. FOREIGN KEY
5. DEFAULT
6. AUTO_INCREMENT