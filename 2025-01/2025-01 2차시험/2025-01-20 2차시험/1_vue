라이프사이클
 - 컴포넌트가 생성-업데이트-제거되는 과정을 자체 관리하는 메서드
 - 콜백기반함수라 콜백을 잘 이해하고있어야함
  


뷰의 라우터
 - 익스프레스의 라우터와 유사
 - 뷰에서 라우팅 기능을 제공해주는 라이브러리
 - 브라우저가 새로고침없이 뷰로 만든 페이지간 자유로운 이동을 지원
 - 비동기와 관련이 있음
 - Creation, Mounting, Updating, Destruction
 - 크게 4가지 상태로 구분되면서 인스턴스의 주기별로 행동을 제어한다.
 
라이프사이클 이용시 장점
 - 메서드가 정해져있기 때문에 네이밍 고민이 필요 없음 
   => ? 오버라이드하는거아닐까
 - 어느 개발자나 똑같은 상태별 처리가 가능하기 때문에 유지보수성 또한 좋아짐

 네, 이해했습니다. 귀하가 작성한 내용을 기반으로 추가 정보를 제공하고 일부 내용을 보완하겠습니다.


Vue의 라이프사이클 훅:
- 컴포넌트의 라이프사이클에서 특정 단계에 끼어들 수 있는 메서드
- Vue의 경우 라이프사이클마다 단계마다 제어할 수 있도록 메서드를 준비함


1. beforeCreate : 구성요소 초기화 전 실행되는 메서드
  -  Vue 인스턴스가 구성요소의 데이터, 계산된 속성, 메서드, 및 이벤트 리스너를 설정하기 전.
  주의사항 - DOM 구조 접근 불가.
  1-1. 객체 생성 이전 이벤트라 객체 생성 이후 이벤트들에 접근 불가
  1-2. 글로벌 이벤트 리스너 설정 시 사용
  추가 정보 - 이 단계에서는 반응형 데이터나 컴포넌트 인스턴스에 
            접근할 수 없습니다.
2. created
  2-1. 데이터 관찰, 계산된 속성, 메서드, 감시자 등이 설정된 후 호출됩니다.
  2-2. API 호출이나 초기 데이터 설정에 적합한 단계입니다.
3. beforeMount : 초기 렌더링 직전에 실행
  3-1. 템플릿이 컴파일된 후, 실제 DOM에 삽입되기 직전에 호출됩니다.
4. mounted : 컴포넌트 자체가 DOM에 추가되는 단계
    4-1. DOM에 컴포넌트가 마운트 된 후 실행
// beforeMount, mounted 메서드의 차이는 육안, 체감이 어려움
// DOM에 조작이 필요한지, 불필요한지 알아야하는 것 또한 개발자의 몫
    추가 정보 - 이 단계에서 DOM 조작, 외부 라이브러리 초기화 등을 수행할 수 있습니다.
    4-1. 자식 컴포넌트의 마운트를 보장하지 않으므로, 필요한 경우 this.$nextTick을 사용하세요.
5. beforeUpdate : 데이터가 변경될 때마다 호출되지만,
    업데이트가 화면에 렌더링되기 전 호출
    무한루프에 빠지기 쉬운 메서드
      추가 정보 - 이 단계에서 추가적인 상태 변경을 수행할 수 있지만, 불필요한 재렌더링을 피하기 위해 주의해야 합니다.
6. updated : 업데이트가 화면에 렌더링 된 후 호출
    6-1. 컴포넌트의 반응형 데이터가 변경되어 재렌더링이 발생하는 단계
    실행주기 차이 화면에 렌더링 되기 전, 후 차이
    공통점은 어떤 이벤트가 수행됐을 때 실행된다는 것
    실시간으로 이벤트 발생하는 경우 : 채팅
    추가 정보 - DOM이 업데이트된 상태이므로,
              업데이트된 DOM에 의존하는 연산을 수행할 수 있습니다.
    6-1. 이 훅에서 상태를 변경하면 무한 루프에 빠질 수 있으므로
         주의해야 합니다.
7. beforeUnmount
  7-1. 컴포넌트가 제거되기 직전에 호출됩니다.
  7-2. 이벤트 리스너나 타이머 등을 정리하는 데 적합한 단계입니다.
8. unmounted
  8-1. 컴포넌트가 완전히 제거된 후 호출됩니다.
  8-2. 모든 자식 컴포넌트도 언마운트된 상태입니다.
9. errorCaptured : 오류 발생 시 호출되는 메서드
      에러 발생 시 무조건 호출됨
      추가 정보 - 하위 컴포넌트에서 발생한 에러를 캡처하고 처리할 수 있습니다.
10. renderTracked : Vue 3에 출시된 메서드.
  10-1. 컴포넌트에 렌더링 과정을 추적하고 최적화 하는데 도움이 되는 메서드
  10-2. beforeUpdate, updated 와 연계되서 같이 사용됨
  10-3. 성능에 영향을 주기 때문에 개발과정에서만 사용하고 운영단계에서는 제외할 것
11. renderTriggered : 렌더링 과정이 완료된 후 실행되는 메서드
  11-1. 컴포넌트 렌더링 후 필요한 작업을 수행하거나 렌더링 결과를 확인 가능
12. activated : 캐시된 컴포넌트가 다시 활성화될 때 호출됩니다 (keep-alive 컴포넌트에서 사용)
13. deactivated : 캐시된 컴포넌트가 비활성화될 때 호출됩니다 (keep-alive 컴포넌트에서 사용)
14. serverPrefetch : 서버 사이드 렌더링 중에 비동기 데이터를 가져오는 데 사용됩니다.

추가 정보:
- Vue 3의 Composition API를 사용할 경우, 
  이러한 훅들은 onBeforeMount, onMounted 등의 함수로 사용됩니다 .
- 각 훅의 사용 시기와 목적을 이해하고 적절히 활용하는 것이 중요합니다.
- 컴포넌트의 생명주기를 이해하면 더 효율적이고 버그가 적은 애플리케이션을 개발할 수 있습니다.
 


 Creation - 생성단계
  - 컴포넌트가 DOM에 추가되기 전 싫애
  - 서버사이트 렌더링에서도 실행되는 단계 
  (라이프사이클을 제어하기 위해서는 '훅'이라는게 있음 
  유일한 훅)
